^ 跳转到行首的第一个非空白字符
b/w 和 B/W 进行以单词为单位的跳转
    小写的跟编程语言里的标识符的规则相似，认为一个单词是由字母、数字、下划线组成的（不严格的说法），而大写的命令则认为非空格字符都是单词

f（find）和 t（till） 行内搜索字符
    找到下一个（如果在输入它们之前先输入数字 n 的话，那就是下面第 n 个紧接着输入的字符
    f 会包含这个字符，而 t 不会包含这个字符
    反方向搜索的话，使用大写的 F 和 T 就可以

( 和 ) 移到上一句和下一句 
{ 和 } 移到上一段和下一段

<C-Home> 和 <C-End> 跳转到文件的 开头和结尾
G 是跳转到最后一行的第一个字符，而不是最后一个字符

d 加动作来进行删除（dd 删除整行）；D 则相当于 d$，删除到行尾
c 加动作来进行修改（cc 修改整行）；C 则相当于 c$，删除到行尾然后进入插入模式
s 相当于 cl，删除一个字符然后进入插入模式；S 相当于 cc，替换整行的内容。
i 在当前字符前面进入插入模式；I 则相当于 ^i，把光标移到行首非空白字符上然后进 入插入模式
a 在当前字符后面进入插入模式；A 相当于 $a，把光标移到行尾然后进入插入模式
o 在当前行下方插入一个新行，然后在这行进入插入模式；O 在当前行上方插入一个新 行，然后在这行进入插入模式
r 替换光标下的字符；R 则进入替换模式，每次按键（直到 <Esc>）替换一个字符。
u 撤销最近的一个修改动作；U 撤销当前行上的所有修改

if (message == "sesame open")
    dw（理解为 delete word）会删除 ame␣，结果是 if (message == "sesopen")
    diw（理解为 delete inside word）会删除 sesame，结果是 if (message == " open")
    daw（理解为 delete a word）会删除 sesame␣，结果是 if (message == "open")
    diW 会删除 "sesame，结果是 if (message == open")
    daW 会删除 "sesame␣，结果是 if (message == open")
    di" 会删除 sesame open，结果是 if (message == "")
    da" 会删除 "sesame open"，结果是 if (message ==)
    di( 或 di) 会删除 message == "sesame open"，结果是 if ()
    da( 或 da) 会删除 (message == "sesame open")，结果是 if␣

    搭配 s（sentence）对句子进行操作——适合西文文本编辑 
    搭配 p（paragraph) 对段落进行操作——适合西文文本编辑，及带空行的代码编辑 
    搭配 t（tag）对 HTML/XML 标签进行操作——适合 HTML、XML 等语言的代码编辑 
    搭配 ` 和 ' 对这两种引号里的内容进行操作——适合使用这些引号的代码，如 shell 和 Python 
    搭配方括号（“[”和“]”）对方括号里的内容进行操作——适合各种语言（大部分都 会用到方括号吧） 
    搭配花括号（“{”和“}”）对花括号里的内容进行操作——适合类 C 的语言 
    搭配角括号（“<”和“>”）对角括号里的内容进行操作——适合 C++ 的模板代码
    再进一步，在 a 和 i 前可以加上数字，对多个（层）文本对象进行操作

<C-B> 和 <C-F>，分别代表 Backward 和 Forward 翻页
<C-U> 和 <C-D> 翻半页
数字加 G 来跳转到指定行
| 来跳转到指定列
当前屏幕的话，可以快速移动光标到屏幕的顶部、中间和底部：用 H（High）、 M（Middle）和 L（Low）就可以做到
<C-E> 和 <C-Y> 滚动屏幕而不移动光标
zt、zz 和 zb 把当前行“滚动”到屏幕的顶部、中部或底部

; 重复最近的字符查找（f、t 等）操作 
, 重复最近的字符查找操作，反方向
n 重复最近的字符串查找操作（/ 和 ?） 
N 重复最近的字符串查找操作（/ 和 ?），反方向
. 重复执行最近的修改操作