开发接口标准
  ABI: Application Binary Interface
    ABI描述了应用程序与OS之间的底层接口,允许编译好的目标代码在使用兼容ABI的系统中无需改动就能运行
  API：Application Programming Interface
    API定义了源代码和库之间的接口，因此同样的源代码可以在支持这个API的任何系统中编译
  POSIX: Portable Operating System Interface 
        IEEE在操作系统上定义的一系列API标准
        POSIX兼容的程序可在其它POSIX操作系统编译执行
  运行程序格式：
    Windows: EXE, .dll(dynamic link library), .lib
    Linux: ELF, .so(shared object), .a

用户和内核空间
  用户空间：User space 
	  用户程序的运行空间。为了安全，它们是隔离的，即使用户的程序崩溃，内核也不受影响
	  只能执行简单的运算，不能直接调用系统资源，必须通过系统接口（ system call），才能向内核发出指令
  内核空间：Kernel space 
	  是 Linux 内核的运行空间
	  可以执行任意命令，调用系统的一切资源

  // 第一行和第二行都是简单的赋值运算，在 User space 执行。
  // 第三行需要写入文件，就要切换到 Kernel space，因为用户不能直接写文件，必须通过内核安排。
  // 第四行又是赋值运算，就切换回 User space
  str = “www.magedu.com"  	// 用户空间
  x = x + 100 		// 用户空间
  file.write(str)  	 	// 切换到内核空间
  y = x + 200   		// 切换回用户空间

Linux发行版
  slackware:SUSE Linux Enterprise Server (SLES) 
            OpenSuse桌面
  debian:	ubuntu，mint
  redhat:	RHEL: RedHat Enterprise Linux
          每18个月发行一个新版本
          CentOS：兼容RHEL的格式
          中标麒麟：中标软件
          Fedora：每6个月发行一个新版本
  ArchLinux: 轻量简洁
  Gentoo: 极致性能，不提供传统意义的安装程序
  LFS: Linux From scratch 自制Linux
  Android: kernel+busybox（工具集）+java虚拟机
  Linux分支参考网站：http://futurist.se/gldt/

  Linux版本
    版本号的第二位数字，可以确定Linux内核版本的类型
    开发版本:  第二位数字是奇数 e.g. 3.9.78
    稳定版本:  第二位数字是偶数 e.g. 3.10.0

Linux哲学思想
  一切皆文件（包括硬件），99.9%
  小型，单一用途的程序
  链接程序，共同完成复杂的任务
  避免令人困惑的用户界面
  配置数据存储在文本中

程序=算法+数据结构
  以算法为中心，数据结构服务于算法：过程式编程
  以数据为中心，算法服务于数据：对象式编程

用户登录
  root 用户
    一个特殊的管理帐户
    也被称为超级用户
    root已接近完整的系统控制
    对系统损害几乎有无限的能力
    除非必要,不要登录为 root 
  普通（ 非特权 ）用户
    权限有限
    造成损害的能力比较有限

终端terminal
  设备终端
    键盘鼠标显示器
  物理终端（ /dev/console ）
    控制台console
  虚拟终端(tty：teletypewriters， /dev/tty#  #为[1-6])
    tty 可有n个，Ctrl+Alt+F[1-6]
  图形终端（ /dev/tty7 ） startx, xwindows
    CentOS 6: Ctrl + Alt + F7
    CentOS 7: 在哪个终端启动，即位于哪个虚拟终端
  串行终端（ /dev/ttyS# ）
    ttyS
  伪终端（ pty：pseudo-tty ， /dev/pts/# ）
    pty, SSH远程连接
  查看当前的终端设备命令: tty

  交互式接口 
    启动终端后，在终端设备附加一个交互式应用程序
    
    1. GUI: Graphic User Interface  
        X protocol, window manager, desktop
        Desktop:
          GNOME (C, 图形库gtk)，
          KDE   (C++,图形库qt)
          XFCE  (轻量级桌面)
    2. CLI: Command Line Interface
        shell程序：sh	csh	tcsh ksh	bash zsh   

!command 输出并执行上一个执行的command命令
\command 忽略别名,用原command执行(当别名与command名相同时)