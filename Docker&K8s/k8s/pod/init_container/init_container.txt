Init Container就是用来做初始化工作的容器，可以是一个或者多个，如果有多个的话，
这些容器会按定义的顺序依次执行，只有所有的Init Container执行完后，主容器才会被启动。
一个Pod里面的所有容器是共享数据卷和网络命名空间的，所以Init Container里面产生的数据可以被主容器使用到的。

我们在Pod启动过程中，初始化容器会按顺序在网络和数据卷初始化之后启动。
每个容器必须在下一个容器启动之前成功退出。
如果由于运行时或失败退出，导致容器启动失败，它会根据Pod的restartPolicy指定的策略进行重试。 
然而，如果Pod的restartPolicy设置为Always，Init容器失败时会使用RestartPolicy策略。

在所有的初始化容器没有成功之前，Pod将不会变成Ready状态。
正在初始化中的Pod处于Pending状态，但应该会将条件Initializing设置为true。

Init Container應用場景
1. 等待其他模块Ready
2. 做初始化配置：比如集群里检测所有已经存在的成员节点，为主容器准备好集群的配置信息，
   这样主容器起来后就能用这个配置信息加入集群。
3. 其它场景：如将pod注册到一个中央数据库、配置中心等