kubelet通过使用liveness probe来确定你的应用程序是否正在运行，通俗点将就是是否还活着。
一般来说，如果你的程序一旦崩溃了， Kubernetes就会立刻知道这个程序已经终止了，然后就会重启这个程序。
而我们的liveness probe的目的就是来捕获到当前应用程序还没有终止，还没有崩溃，如果出现了这些情况，那么就重启处于该状态下的容器，使应用程序在存在 bug 的情况下依然能够继续运行下去。

kubelet使用readiness probe来确定容器是否已经就绪可以接收流量过来了。
这个探针通俗点讲就是说是否准备好了，现在可以开始工作了。
只有当Pod中的容器都处于就绪状态的时候kubelet才会认定该Pod处于就绪状态，因为一个Pod下面可能会有多个容器。
当然Pod如果处于非就绪状态，那么我们就会将他从我们的工作队列(实际上就是的Service)中移除出来，这样我们的流量就不会被路由到这个Pod里面来了。

这两个探针的支持三种配置方式
1. exec：执行一段命令
2. http：检测某个 http 请求
3. tcpSocket：使用此配置， kubelet将尝试在指定端口上打开容器的套接字。如果可以建立连接，容器被认为是健康的，如果不能就认为是失败的。实际上就是检查端口

通过kubectl get pod可以查看restart次数

有的时候，应用程序可能暂时无法对外提供服务，例如，应用程序可能需要在启动期间加载大量数据或配置文件。 
在这种情况下，您不想杀死应用程序，也不想对外提供服务。 那么这个时候我们就可以使用readiness probe来检测和减轻这些情况。 
Pod中的容器可以报告自己还没有准备，不能处理Kubernetes服务发送过来的流量。