数组指针
    和C语言一样,只要一个指针指向数组之后,就可以通过指针来操作数组
        (*p)[0] 或者直接 p[0]
    go语言中指向数组的指针不支持+1 -1操作(C语言是支持的)
       *(p + 1) // 不支持
切片指针
    var sce []int = []int{1, 3, 5}
    如果直接sce的地址(%p),得到的是结构体中指向底层数组的指针保存的值
    如果&sce的地址(%p),得到的是切片结构体自己的地址
结构体指针
    注意和C语言一样可以省略*来操作结构体
    var p *Person
    p = &per
    (*p).name = "zs"
    也可以直接使用p.name = "zs"

Go方法与函数的区别在于方法是一种特殊的函数,它是和属性绑定在一起的,通常是结构体
方法只能通过绑定的数据类型对应的变量来调用
函数名称和方法名称可以重名
方法中接受者地址传递的两种方式
1. (指针变量名).方法名称()
2. 变量名.方法名称() // 这里在go语言中只要接受者是指针类型,那么编译器就会自动将普通变量的地址取出来传递给接受者