vim [OPTION]... FILE...
  +#: 打开文件后，让光标处于第#行的行首，+默认行尾
	+/PATTERN：打开文件后，直接让光标处于第一个被PATTERN匹配到的行的行首
	–b file 二进制方式打开文件
	–d file1 file2…  比较多个文件
	-m file  只读打开文件

三种主要模式：
  命令(Normal)模式:默认模式，移动光标，剪切/粘贴文本
  插入(Insert)或编辑模式： 修改文本
  扩展命令(extended command)模式： 保存，退出等
Esc键 退出当前模式
Esc键 总是返回到命令模式

ex file 或 vim –e 直接进入扩展命令模式

模式转换
  命令模式 --> 插入模式
    i: insert, 在光标所在处输入
    I：在当前光标所在行的行首输入
    a: append, 在光标所在处后面输入
    A：在当前光标所在行的行尾输入
    o: 在当前光标所在行的下方打开一个新行
    O：在当前光标所在行的上方打开一个新行
  插入模式 --> 命令模式
 		ESC
  命令模式 --> 扩展命令模式
		:
  扩展命令模式 --> 命令模式
		ESC,enter

关闭文件
  扩展模式：
    :q	退出
    :q!	强制退出，丢弃做出的修改
    :wq	保存退出
    :x	保存退出
  命令模式
    ZZ: 保存退出
    ZQ：不保存退出

扩展模式
  按“:”进入Ex模式
  命令：
    w	写（存）磁盘文件
    wq	写入并退出
    x	写入并退出
    q 	退出
    q！	不存盘退出，即使更改都将丢失	
    r filename	读文件内容到当前文件中
    w  filename	将当前文件内容写入另一个文件
    !command	执行命令
    r!command	读入命令的输出

命令模式光标跳转
  字符间跳转：
	  h: 左 l: 右 j: 下	k: 上
	  #COMMAND：跳转由#指定的个数的字符 e.g. 10h 3k
  单词间跳转：
    w：下一个单词的词首
    e：当前或下一单词的词尾
    b：当前或前一个单词的词首
    #COMMAND：由#指定一次跳转的单词数
  当前页跳转：
	  H：页首 M：页中间行 L:页底 
  页跳转:
    ctrl-f 向下翻一页
    ctrl-b 向上翻一页
    ctrl-u 向上翻半页
    ctrl-d 向下翻半页
  行首行尾跳转：
    ^: 跳转至行首的第一个非空白字符
    0: 跳转至行首
    $: 跳转至行尾
  行间移动：
    #G 或 扩展模式:# ：跳转至由#指定行
    G：最后一行
    1G, gg: 第一行
  句间移动：
    )下一句	(上一句
  段落间移动：
    }下一段	{上一段

命令模式操作
  字符编辑：
    x: 删除光标处的字符
    #x: 删除光标处起始的#个字符
    xp: 交换光标所在处的字符及其后面字符的位置
    ~:转换大小写
    J:删除当前行后的换行符
  替换命令(r, replace)
    r: 替换光标所在处的字符
    R:切换成REPLACE模式,会覆盖后面的字符
  删除命令：
    d: 删除命令，可结合光标跳转字符，实现范围删除
    d$: 删除到行尾
    d^:删除到非空行首
    d0:删除到行首
    dw:
    de:
    db:
    #COMMAND
    dd: 删除光标所在的行
      #dd：多行删除
    D：从当前光标位置一直删除到行尾，留空行，等同于d$
  复制命令(y, yank)：
    y: 复制，行为相似于d命令
    y$
    y0
    y^
    ye
    yw
    yb
    #COMMAND
    yy：复制行
      #yy: 复制多行
    Y: 复制整行
  粘贴命令(p, paste)：
    p：缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面
    P：缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面
  改变命令(c, change)
	  c: 修改后切换成插入模式
    命令模式 --> 插入模式
      c$
      c^
      c0
      cb
      ce
      cw
      #COMMAND
      cc：删除当前行并输入新内容，相当于S
        #cc: 
      C：删除当前光标到行尾，并切换成插入模式
  撤消更改
    u撤销最近的更改
    #u撤销之前多次更改
    U 撤消光标落在这行后所有此行的更改
    按Ctrl-r重做最后的“撤消”更改
    . 重复前一个操作
    n.重复前一个操作n次

扩展命令模式
  地址定界 
    :start_pos,end_pos
    # 具体第#行，例如2表示第2行
    #,# 从左侧#表示起始行，到右侧#表示结尾行	
    #,+#  从左侧#表示的起始行，加上右侧#表示的行数
      ：2,+3  表示2到5行
    .   当前行
    $  最后一行
      .,$-1 当前行到倒数第二行
    %  全文, 相当于1,$
    /pat1/,/pat2/
      从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束
      #,/pat/
      /pat/,$
    使用方式：后跟一个编辑命令
      d
      y
      w file: 将范围内的行另存至指定文件中
      r file：在指定位置插入指定文件中的所有内容
  查找
    /PATTERN：从当前光标所在处向文件尾部查找
    ?PATTERN：从当前光标所在处向文件首部查找
    n：与命令同方向
    N：与命令反方向
  查找并替换
    s: 在扩展模式下完成查找替换操作
      格式：s/要查找的内容/替换为的内容/修饰符
      要查找的内容：可使用模式
      替换为的内容：不能使用模式，但可以使用\1, \2, ...等后向引用符号；还可以使用“&”引用前面查找时查找到的整个内容
      修饰符：
      i: 忽略大小写
      g: 全局替换；默认情况下，每一行只替换第一次出现
      gc:全局替换，每次替换前询问
      查找替换中的分隔符/可替换为其它字符，例如
        s@/etc@/var@g
        s#/boot#/#i

可视化模式
  允许选择的文本块
    v 面向字符
    V 面向行
    ctrl-v 面向块
  可视化键可用于与移动键结合使用：
    w  )  }  箭头等
  突出显示的文字可被删除，复制，变更，过滤，搜索，替换等

使用多个“窗口”
  多文件分割
    vim -o|-O FILE1 FILE2 ...
    -o: 水平分割
    -O: 垂直分割
    在窗口间切换：Ctrl+w, Arrow
  单文件窗口分割：
    Ctrl+w,s: split, 水平分割
    Ctrl+w,v: vertical, 垂直分割
    ctrl+w,q：取消相邻窗口
    ctrl+w,o:取消全部窗口
    ：wqall 退出

定制vim的工作特性
  配置文件：永久有效
    全局：/etc/vimrc
    个人：~/.vimrc
  扩展模式：当前vim进程有效
    (1) 行号
      显示：set number, 简写为set nu
      取消显示：set nonumber, 简写为set nonu
    (2) 忽略字符的大小写
      启用：set ic
      不忽略：set noic
    (3) 自动缩进
      启用：set ai
      禁用：set noai
    (4) 智能缩进
      启用：smartindent 简写 set si
      禁用：set nosi
    (5) 高亮搜索
      启用：set hlsearch
      禁用：set nohlsearch
    (6) 语法高亮
      启用：syntax on
      禁用：syntax off
    (7) 显示Tab和换行符 ^I 和$显示
      启用：set list
      禁用：set nolist
    (8) 文件格式
      启用windows格式：set fileformat=dos
      启用unix格式：set fileformat=unix
      简写： set ff=dos|unix
    (9) 设置文本宽度
      启用: set textwidth=65 (vim only)
      禁用: set wrapmargin=15
    (10) 设置光标所在行的标识线
      启用:set cursorline，简写cul
      禁用:set no cursorline
    (11) 复制保留格式
      启用: set paste
      禁用: set nopaste
    set帮助
      :help option-list 
      :set or :set all
    vi/vim内置帮助 
      :help
      :help topic
      Use :q to exit help


