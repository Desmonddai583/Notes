iOS应用数据存储的常用方式
  XML属性列表（plist）归档
  Preference(偏好设置)
  NSKeyedArchiver归档(NSCoding)
  SQLite3 
  Core Data

应用沙盒
  每个iOS应用都有自己的应用沙盒(应用沙盒就是文件系统目录)，与其他文件系统隔离。应用必须待在自己的沙盒里，其他应用不能访问该沙盒

  应用沙盒结构
    应用程序包：(Layer)包含了所有的资源文件和可执行文件
    Documents：保存应用运行时生成的需要持久化的数据，iTunes同步设备时会备份该目录。例如，游戏应用可将游戏存档保存在该目录
    tmp：保存应用运行时所需的临时数据，使用完毕后再将相应的文件从该目录删除。应用没有运行时，系统也可能会清除该目录下的文件。iTunes同步设备时不会备份该目录
    Library/Caches：保存应用运行时生成的需要持久化的数据，iTunes同步设备时不会备份该目录。一般存储体积大、不需要备份的非重要数据
    Library/Preference：保存应用的所有偏好设置，iOS的Settings(设置)应用会在该目录中查找应用的设置信息。iTunes同步设备时会备份该目录

  应用沙盒目录的常见获取方式
    沙盒根目录：NSString *home = NSHomeDirectory();
    Documents：(2种方式)
      1. 利用沙盒根目录拼接”Documents”字符串
          // 不建议采用，因为新版本的操作系统可能会修改目录名
          NSString *home = NSHomeDirectory();
          NSString *documents = [home stringByAppendingPathComponent:@"Documents"];
      2. 利用NSSearchPathForDirectoriesInDomains函数
          // directory:NSSearchPathDirectory类型的enum值，表明我们要搜索的目录名称
          // domainMask:NSSearchPathDomainMask类型的enum值，指定搜索方位，这里的NSUserDomainMask表示搜索的方位限制于当前应用的沙盒。
          // expandTilde:BOOL值，表示是否展开波浪线，因为在iOS中的全写形式是/User/UserName，为YES即表示写成全写形式，为NO直接表示为"~"
          NSArray *array =  NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, NO);
          // 在iOS中，只有一个目录跟传入的参数匹配，所以这个集合里面只有一个元素
          NSString *documents = [array objectAtIndex:0];
    tmp：NSString *tmp = NSTemporaryDirectory();
    Library/Caches：(跟Documents类似的2种方法)
    Library/Preference：通过NSUserDefaults类存取该目录下的设置信息