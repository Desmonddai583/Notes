枚举通常有3中实现方式
  1. 
    typedef enum
    {
        XMGDemoTypeTop,
        XMGDemoTypeBottom,
    }XMGDemoType;

  2.
    可以定义类型
    typedef NS_ENUM(NSInteger,XMGType)
    {
        XMGTypeTop,
        XMGTypeBottom,
    };
  
  3. 位移枚举
    位移枚举作为参数可以传递多个值
    如果是位移枚举,观察第一个枚举值,如果该枚举值!=0 那么可以默认传0做参数,如果传0做参数,那么效率最高
    typedef NS_OPTIONS(NSInteger, XMGActionType)
    {
        XMGActionTypeTop = 1<<0,  //1*2(0) =1
        XMGActionTypeBottom = 1<<1,//1*2(1)=2
        XMGActionTypeLeft = 1<<2,//1*2(2)=4
        XMGActionTypeRight = 1<<3,//8
    };
    
    [self demo:XMGActionTypeTop | XMGActionTypeRight | XMGActionTypeLeft |XMGActionTypeBottom];

    -(void)demo:(XMGActionType)type
    {
        NSLog(@"%zd",type);
        
        if (type & XMGActionTypeTop) {
            NSLog(@"向上---%zd",type & XMGActionTypeTop);
        }
        
        if (type & XMGActionTypeRight) {
            NSLog(@"向右---%zd",type & XMGActionTypeRight);
        }
        if (type & XMGActionTypeBottom) {
            NSLog(@"向下---%zd",type & XMGActionTypeBottom);
        }
        
        if (type & XMGActionTypeLeft) {
            NSLog(@"向左---%zd",type & XMGActionTypeLeft);
        }
    }

    位移枚举原理
      解析并集,通过&去判断下是否包含各个值

      - (void)test:(int)value
      {
          if (value & a) NSLog(@"包含了a");
          if (value & b) NSLog(@"包含了b");
          if (value & c) NSLog(@"包含了c");
          if (value & d) NSLog(@"包含了d");
      }